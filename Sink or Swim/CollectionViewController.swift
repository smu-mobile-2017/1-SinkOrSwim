//
//  CollectionViewController.swift
//  Sink or Swim
//
//  Created by Paul Herz on 9/8/17.
//  Copyright Â© 2017 Paul Herz. All rights reserved.
//

import UIKit

// An extremely simple UICollectionViewController subclass,
// most code was auto-generated by Xcode (including this weird
// dangling property).

private let reuseIdentifier = "basicCollectionCell"

class CollectionViewController: UICollectionViewController {

	// Xcode literal references to images in the assets bundle.
	lazy var images: [UIImage] = [#imageLiteral(resourceName: "demo-flower"), #imageLiteral(resourceName: "demo-flower-2"), #imageLiteral(resourceName: "demo-flower-3"), #imageLiteral(resourceName: "demo-flower-4")]
	
    override func viewDidLoad() {
        super.viewDidLoad()

        // Register cell classes
        self.collectionView!.register(UICollectionViewCell.self, forCellWithReuseIdentifier: reuseIdentifier)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
	
    // MARK: UICollectionViewDataSource

    override func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }

    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return images.count
    }

	// Set the backgroundView of the cell 
	// to the image when building the cell.
    override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: reuseIdentifier, for: indexPath)
		
		let iv = UIImageView(image: images[indexPath.item])
		iv.contentMode = .scaleAspectFill
        cell.backgroundView = iv
    
        return cell
    }

}
